// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String
  password  String
  name      String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  USER
}

model ArticleCategories {
  id          Int        @id @default(autoincrement())
  title       String
  description String     @default("")
  image       String
  articles    Articles[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Articles {
  id         Int               @id @default(autoincrement())
  categoryId Int
  title      String
  subtitle   String            @default("")
  content    String
  image      String
  status     ItemStatus        @default(INACTIVE)
  category   ArticleCategories @relation(fields: [categoryId], references: [id])
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model SavedArticles {
  id        String   @id
  userId    Int
  articleId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Batik {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ScanHistory {
  id          String        @id
  userId      Int
  image       String
  status      ProcessStatus
  result      Json
  rawResponse String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

enum ItemStatus {
  ACTIVE
  INACTIVE
}

enum ProcessStatus {
  SUCCESS
  FAILED
}
